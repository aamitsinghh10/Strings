class Solution {
public:
    string multiply(string num1, string num2) 
    {
        if(num1=="0" || num2=="0")
            return "0";
            
        int l1=num1.size();
        int l2=num2.size();
        
        vector<int> result(l1+l2,0);
        
        int i=l2-1;//pointing to last character of num2
        int pf=0;//power factor
        while(i>=0)
        {
            int ival=num2[i]-'0';
            i--;
            
            int j=l1-1;//pointing to last character of nums1
            
            int k=result.size()-1-pf;//initially points to last index of result array, but changes as power factor increases
            int carry=0;//initially 0
            
            while(j>=0 || carry!=0)
            {
                int jval=(j>=0)?(num2[j]-'0'):0;
                j--;
                
                int product=ival*jval+carry+result[k];
                
                result[k]=product%10;
                carry=product/10;
                
                k--;//as we starting from last
            }
            pf++;
        }
        // leading zeroes case
        string str="";
        bool flag=false;
        
        for(int val:result)
        {
            if(val==0 && flag==false)
            {
                continue;//leading zero
            }
            else
            {
                flag=true;
                str+=val;
            }
        }
        return str;
    }
};
